plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.liquibase.gradle' version '2.1.1'
}

group = 'bhutan'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    set('querydslVersion', "5.0.0")
}

apply from: 'database.gradle'

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.data:spring-data-envers'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.liquibase:liquibase-core'

    //custom
    implementation "am.iunetworks:multilingual-core:0.0.1"
    implementation "am.iunetworks:common-persistence:0.0.4"
    implementation "am.iunetworks:common-validation:0.0.1"

    implementation "com.querydsl:querydsl-jpa:${querydslVersion}"
    implementation "com.querydsl:querydsl-core:${querydslVersion}"

    annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jpa"
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation 'com.jsunsoft.http:http-request:2.2.2'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.1.0'

    testImplementation 'com.tngtech.archunit:archunit:0.22.0'

}

//Use log4j2 instead logback
configurations.all {
    exclude group: 'ch.qos.logback'

    resolutionStrategy.dependencySubstitution.all { dependency ->
        if (dependency.requested instanceof ModuleComponentSelector && dependency.requested.module == 'spring-boot-starter-logging') {
            dependency.useTarget("org.springframework.boot:spring-boot-starter-log4j2:$dependency.requested.version", 'Use Log4j2 instead of Logback')
        }
    }
}

bootRun {
    systemProperty 'java.util.logging.manager', findProperty('java.util.logging.manager') ?: 'org.apache.logging.log4j.jul.LogManager'
}


test {
    useJUnitPlatform()
}

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters' << '-Xlint:unchecked'
    options.deprecation = true
    inputs.files(processResources)
}
